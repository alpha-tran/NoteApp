{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\devops\\\\devsecops\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, setState] = useState({\n    user: null,\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    isLoading: true,\n    error: null\n  });\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const user = await authService.getCurrentUser();\n          setState(prev => ({\n            ...prev,\n            user,\n            isAuthenticated: true,\n            isLoading: false\n          }));\n        } catch (error) {\n          localStorage.removeItem('token');\n          setState(prev => ({\n            ...prev,\n            isLoading: false\n          }));\n        }\n      } else {\n        setState(prev => ({\n          ...prev,\n          isLoading: false\n        }));\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      localStorage.setItem('token', response.access_token);\n      const user = await authService.getCurrentUser();\n      setState(prev => ({\n        ...prev,\n        user,\n        token: response.access_token,\n        isAuthenticated: true,\n        error: null\n      }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: 'Invalid credentials'\n      }));\n      throw error;\n    }\n  };\n  const register = async data => {\n    try {\n      const user = await authService.register(data);\n      setState(prev => ({\n        ...prev,\n        error: null\n      }));\n      await login({\n        username: data.email,\n        password: data.password\n      });\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: 'Registration failed'\n      }));\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n      setState({\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      });\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: 'Logout failed'\n      }));\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"izfe3VXNsVgsuVvyYvQIR0LXUvc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","state","setState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","initAuth","getCurrentUser","prev","removeItem","login","credentials","response","setItem","access_token","register","data","username","email","password","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Project/devops/devsecops/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User, AuthState, LoginCredentials, RegisterData, AuthResponse } from '../types';\r\nimport { authService } from '../services/api';\r\n\r\ninterface AuthContextType extends AuthState {\r\n    login: (credentials: LoginCredentials) => Promise<void>;\r\n    register: (data: RegisterData) => Promise<void>;\r\n    logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [state, setState] = useState<AuthState>({\r\n        user: null,\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: false,\r\n        isLoading: true,\r\n        error: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const initAuth = async () => {\r\n            const token = localStorage.getItem('token');\r\n            if (token) {\r\n                try {\r\n                    const user = await authService.getCurrentUser();\r\n                    setState(prev => ({\r\n                        ...prev,\r\n                        user,\r\n                        isAuthenticated: true,\r\n                        isLoading: false,\r\n                    }));\r\n                } catch (error) {\r\n                    localStorage.removeItem('token');\r\n                    setState(prev => ({\r\n                        ...prev,\r\n                        isLoading: false,\r\n                    }));\r\n                }\r\n            } else {\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    isLoading: false,\r\n                }));\r\n            }\r\n        };\r\n\r\n        initAuth();\r\n    }, []);\r\n\r\n    const login = async (credentials: LoginCredentials) => {\r\n        try {\r\n            const response = await authService.login(credentials);\r\n            localStorage.setItem('token', response.access_token);\r\n            const user = await authService.getCurrentUser();\r\n            setState(prev => ({\r\n                ...prev,\r\n                user,\r\n                token: response.access_token,\r\n                isAuthenticated: true,\r\n                error: null,\r\n            }));\r\n        } catch (error) {\r\n            setState(prev => ({\r\n                ...prev,\r\n                error: 'Invalid credentials',\r\n            }));\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (data: RegisterData) => {\r\n        try {\r\n            const user = await authService.register(data);\r\n            setState(prev => ({\r\n                ...prev,\r\n                error: null,\r\n            }));\r\n            await login({ username: data.email, password: data.password });\r\n        } catch (error) {\r\n            setState(prev => ({\r\n                ...prev,\r\n                error: 'Registration failed',\r\n            }));\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            await authService.logout();\r\n            setState({\r\n                user: null,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                error: null,\r\n            });\r\n        } catch (error) {\r\n            setState(prev => ({\r\n                ...prev,\r\n                error: 'Logout failed',\r\n            }));\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ ...state, login, register, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}