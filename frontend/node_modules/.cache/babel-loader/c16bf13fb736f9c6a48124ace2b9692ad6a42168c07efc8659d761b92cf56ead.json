{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\devops\\\\devsecops\\\\frontend\\\\src\\\\components\\\\AuthForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Box, TextField, Button, Typography, Link, Alert } from '@mui/material';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthForm = ({\n  mode\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    login,\n    register\n  } = useAuth();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    try {\n      setError(null);\n      setLoading(true);\n      if (mode === 'register') {\n        const password = formData.get('password');\n        const confirmPassword = formData.get('confirmPassword');\n        if (password !== confirmPassword) {\n          setError('Passwords do not match');\n          return;\n        }\n        await register({\n          username: formData.get('username'),\n          email: formData.get('email'),\n          password: password\n        });\n      } else {\n        await login({\n          username: formData.get('email'),\n          password: formData.get('password')\n        });\n      }\n      navigate('/dashboard');\n    } catch (err) {\n      setError(mode === 'login' ? 'Invalid email or password' : 'Registration failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: mode === 'login' ? 'Sign in' : 'Sign up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), mode === 'register' && /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          label: \"Username\",\n          name: \"username\",\n          autoComplete: \"username\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: mode === 'login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: mode === 'login' ? 'current-password' : 'new-password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), mode === 'register' && /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"confirmPassword\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          id: \"confirmPassword\",\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          disabled: loading,\n          children: loading ? mode === 'login' ? 'Signing in...' : 'Signing up...' : mode === 'login' ? 'Sign In' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: mode === 'login' ? '/register' : '/login',\n            variant: \"body2\",\n            children: mode === 'login' ? \"Don't have an account? Sign Up\" : 'Already have an account? Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthForm, \"nq/k5Ic7kZO5+M2gk6OTd19toGc=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useNavigate","Container","Box","TextField","Button","Typography","Link","Alert","useAuth","jsxDEV","_jsxDEV","AuthForm","mode","_s","navigate","login","register","error","setError","loading","setLoading","handleSubmit","event","preventDefault","formData","FormData","currentTarget","password","get","confirmPassword","username","email","err","component","maxWidth","children","sx","marginTop","display","flexDirection","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","mt","severity","mb","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","disabled","textAlign","href","_c","$RefreshReg$"],"sources":["D:/Project/devops/devsecops/frontend/src/components/AuthForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    Link,\r\n    Alert,\r\n} from '@mui/material';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface AuthFormProps {\r\n    mode: 'login' | 'register';\r\n}\r\n\r\nexport const AuthForm: React.FC<AuthFormProps> = ({ mode }) => {\r\n    const navigate = useNavigate();\r\n    const { login, register } = useAuth();\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.currentTarget);\r\n        \r\n        try {\r\n            setError(null);\r\n            setLoading(true);\r\n\r\n            if (mode === 'register') {\r\n                const password = formData.get('password') as string;\r\n                const confirmPassword = formData.get('confirmPassword') as string;\r\n\r\n                if (password !== confirmPassword) {\r\n                    setError('Passwords do not match');\r\n                    return;\r\n                }\r\n\r\n                await register({\r\n                    username: formData.get('username') as string,\r\n                    email: formData.get('email') as string,\r\n                    password: password,\r\n                });\r\n            } else {\r\n                await login({\r\n                    username: formData.get('email') as string,\r\n                    password: formData.get('password') as string,\r\n                });\r\n            }\r\n\r\n            navigate('/dashboard');\r\n        } catch (err) {\r\n            setError(mode === 'login' ? 'Invalid email or password' : 'Registration failed. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Box\r\n                sx={{\r\n                    marginTop: 8,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {mode === 'login' ? 'Sign in' : 'Sign up'}\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                    {error && (\r\n                        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                            {error}\r\n                        </Alert>\r\n                    )}\r\n                    {mode === 'register' && (\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            autoComplete=\"username\"\r\n                            autoFocus\r\n                        />\r\n                    )}\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus={mode === 'login'}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete={mode === 'login' ? 'current-password' : 'new-password'}\r\n                    />\r\n                    {mode === 'register' && (\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"confirmPassword\"\r\n                            label=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            id=\"confirmPassword\"\r\n                            autoComplete=\"new-password\"\r\n                        />\r\n                    )}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? (mode === 'login' ? 'Signing in...' : 'Signing up...') : (mode === 'login' ? 'Sign In' : 'Sign Up')}\r\n                    </Button>\r\n                    <Box sx={{ textAlign: 'center' }}>\r\n                        <Link href={mode === 'login' ? '/register' : '/login'} variant=\"body2\">\r\n                            {mode === 'login' ? \"Don't have an account? Sign Up\" : 'Already have an account? Sign In'}\r\n                        </Link>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}