{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authService = {\n  async login(credentials) {\n    const formData = new FormData();\n    formData.append('username', credentials.username);\n    formData.append('password', credentials.password);\n    const response = await api.post('/auth/login', formData);\n    return response.data;\n  },\n  async register(data) {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n  async getCurrentUser() {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n  async logout() {\n    await api.post('/auth/logout');\n    localStorage.removeItem('token');\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authService","login","credentials","formData","FormData","append","username","password","response","post","data","register","getCurrentUser","get","logout","removeItem"],"sources":["D:/Project/devops/devsecops/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { LoginCredentials, RegisterData, AuthResponse, User } from '../types';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\nexport const authService = {\r\n    async login(credentials: LoginCredentials): Promise<AuthResponse> {\r\n        const formData = new FormData();\r\n        formData.append('username', credentials.username);\r\n        formData.append('password', credentials.password);\r\n        \r\n        const response = await api.post<AuthResponse>('/auth/login', formData);\r\n        return response.data;\r\n    },\r\n\r\n    async register(data: RegisterData): Promise<User> {\r\n        const response = await api.post<User>('/auth/register', data);\r\n        return response.data;\r\n    },\r\n\r\n    async getCurrentUser(): Promise<User> {\r\n        const response = await api.get<User>('/auth/me');\r\n        return response.data;\r\n    },\r\n\r\n    async logout(): Promise<void> {\r\n        await api.post('/auth/logout');\r\n        localStorage.removeItem('token');\r\n    }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAG;EACvB,MAAMC,KAAKA,CAACC,WAA6B,EAAyB;IAC9D,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACI,QAAQ,CAAC;IACjDH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACK,QAAQ,CAAC;IAEjD,MAAMC,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAe,aAAa,EAAEN,QAAQ,CAAC;IACtE,OAAOK,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMC,QAAQA,CAACD,IAAkB,EAAiB;IAC9C,MAAMF,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAO,gBAAgB,EAAEC,IAAI,CAAC;IAC7D,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAME,cAAcA,CAAA,EAAkB;IAClC,MAAMJ,QAAQ,GAAG,MAAMpB,GAAG,CAACyB,GAAG,CAAO,UAAU,CAAC;IAChD,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMI,MAAMA,CAAA,EAAkB;IAC1B,MAAM1B,GAAG,CAACqB,IAAI,CAAC,cAAc,CAAC;IAC9BZ,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;EACpC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}