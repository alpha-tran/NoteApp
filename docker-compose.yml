version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    mem_limit: 512m
    cpus: 0.5
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///data/app.db
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./backend/app.db:/app/data/app.db:rw
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    security_opt:
      - no-new-privileges:true
    mem_limit: 512m
    cpus: 0.5
    read_only: false  # Cannot be true due to SQLite database writing

networks:
  app-network:
    driver: bridge 